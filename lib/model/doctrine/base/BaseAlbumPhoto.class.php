<?php

/**
 * BaseAlbumPhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $Album_Id
 * @property integer $Photo_Id
 * @property Album $Album
 * @property Photo $Photo
 * 
 * @method integer    getId()       Returns the current record's "Id" value
 * @method integer    getAlbumId()  Returns the current record's "Album_Id" value
 * @method integer    getPhotoId()  Returns the current record's "Photo_Id" value
 * @method Album      getAlbum()    Returns the current record's "Album" value
 * @method Photo      getPhoto()    Returns the current record's "Photo" value
 * @method AlbumPhoto setId()       Sets the current record's "Id" value
 * @method AlbumPhoto setAlbumId()  Sets the current record's "Album_Id" value
 * @method AlbumPhoto setPhotoId()  Sets the current record's "Photo_Id" value
 * @method AlbumPhoto setAlbum()    Sets the current record's "Album" value
 * @method AlbumPhoto setPhoto()    Sets the current record's "Photo" value
 * 
 * @package    poomtshak
 * @subpackage model
 * @author     PoUpA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlbumPhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('album_photo');
        $this->hasColumn('Id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('Album_Id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('Photo_Id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Album', array(
             'local' => 'Album_Id',
             'foreign' => 'id'));

        $this->hasOne('Photo', array(
             'local' => 'Photo_Id',
             'foreign' => 'id'));
    }
}