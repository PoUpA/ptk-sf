<?php

/**
 * BasePtkUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $Username
 * @property string $Email
 * @property string $Password
 * @property string $Firstname
 * @property string $Lastname
 * @property string $Address
 * @property string $Address2
 * @property string $City
 * @property string $Zip
 * @property string $Country
 * @property boolean $IsPtkMember
 * @property string $Image
 * @property string $website
 * @property Doctrine_Collection $Subscription
 * @property Doctrine_Collection $UserUserGroup
 * @property Doctrine_Collection $ContentObject
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getUsername()      Returns the current record's "Username" value
 * @method string              getEmail()         Returns the current record's "Email" value
 * @method string              getPassword()      Returns the current record's "Password" value
 * @method string              getFirstname()     Returns the current record's "Firstname" value
 * @method string              getLastname()      Returns the current record's "Lastname" value
 * @method string              getAddress()       Returns the current record's "Address" value
 * @method string              getAddress2()      Returns the current record's "Address2" value
 * @method string              getCity()          Returns the current record's "City" value
 * @method string              getZip()           Returns the current record's "Zip" value
 * @method string              getCountry()       Returns the current record's "Country" value
 * @method boolean             getIsPtkMember()   Returns the current record's "IsPtkMember" value
 * @method string              getImage()         Returns the current record's "Image" value
 * @method string              getWebsite()       Returns the current record's "website" value
 * @method Doctrine_Collection getSubscription()  Returns the current record's "Subscription" collection
 * @method Doctrine_Collection getUserUserGroup() Returns the current record's "UserUserGroup" collection
 * @method Doctrine_Collection getContentObject() Returns the current record's "ContentObject" collection
 * @method PtkUser             setId()            Sets the current record's "id" value
 * @method PtkUser             setUsername()      Sets the current record's "Username" value
 * @method PtkUser             setEmail()         Sets the current record's "Email" value
 * @method PtkUser             setPassword()      Sets the current record's "Password" value
 * @method PtkUser             setFirstname()     Sets the current record's "Firstname" value
 * @method PtkUser             setLastname()      Sets the current record's "Lastname" value
 * @method PtkUser             setAddress()       Sets the current record's "Address" value
 * @method PtkUser             setAddress2()      Sets the current record's "Address2" value
 * @method PtkUser             setCity()          Sets the current record's "City" value
 * @method PtkUser             setZip()           Sets the current record's "Zip" value
 * @method PtkUser             setCountry()       Sets the current record's "Country" value
 * @method PtkUser             setIsPtkMember()   Sets the current record's "IsPtkMember" value
 * @method PtkUser             setImage()         Sets the current record's "Image" value
 * @method PtkUser             setWebsite()       Sets the current record's "website" value
 * @method PtkUser             setSubscription()  Sets the current record's "Subscription" collection
 * @method PtkUser             setUserUserGroup() Sets the current record's "UserUserGroup" collection
 * @method PtkUser             setContentObject() Sets the current record's "ContentObject" collection
 * 
 * @package    poomtshak
 * @subpackage model
 * @author     PoUpA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePtkUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ptk_user');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('Username', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('Email', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('Password', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Firstname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Lastname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Address', 'string', 3000, array(
             'type' => 'string',
             'length' => 3000,
             ));
        $this->hasColumn('Address2', 'string', 3000, array(
             'type' => 'string',
             'length' => 3000,
             ));
        $this->hasColumn('City', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Zip', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('Country', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('IsPtkMember', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             ));
        $this->hasColumn('Image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Subscription', array(
             'local' => 'id',
             'foreign' => 'User_id'));

        $this->hasMany('UserUserGroup', array(
             'local' => 'id',
             'foreign' => 'User_id'));

        $this->hasMany('ContentObject', array(
             'local' => 'id',
             'foreign' => 'User_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}