<?php

/**
 * BaseArtistEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $Artist_Id
 * @property integer $Event_Id
 * @property Artist $Artist
 * @property Event $Event
 * 
 * @method integer     getId()        Returns the current record's "Id" value
 * @method integer     getArtistId()  Returns the current record's "Artist_Id" value
 * @method integer     getEventId()   Returns the current record's "Event_Id" value
 * @method Artist      getArtist()    Returns the current record's "Artist" value
 * @method Event       getEvent()     Returns the current record's "Event" value
 * @method ArtistEvent setId()        Sets the current record's "Id" value
 * @method ArtistEvent setArtistId()  Sets the current record's "Artist_Id" value
 * @method ArtistEvent setEventId()   Sets the current record's "Event_Id" value
 * @method ArtistEvent setArtist()    Sets the current record's "Artist" value
 * @method ArtistEvent setEvent()     Sets the current record's "Event" value
 * 
 * @package    poomtshak
 * @subpackage model
 * @author     PoUpA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArtistEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('artist_event');
        $this->hasColumn('Id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('Artist_Id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('Event_Id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Artist', array(
             'local' => 'Artist_Id',
             'foreign' => 'id'));

        $this->hasOne('Event', array(
             'local' => 'Event_Id',
             'foreign' => 'id'));
    }
}