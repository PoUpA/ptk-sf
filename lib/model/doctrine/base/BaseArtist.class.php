<?php

/**
 * BaseArtist
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property Doctrine_Collection $Photo
 * @property Doctrine_Collection $Mix
 * @property Doctrine_Collection $Track
 * @property Doctrine_Collection $ArtistEvent
 * 
 * @method Doctrine_Collection getPhoto()       Returns the current record's "Photo" collection
 * @method Doctrine_Collection getMix()         Returns the current record's "Mix" collection
 * @method Doctrine_Collection getTrack()       Returns the current record's "Track" collection
 * @method Doctrine_Collection getArtistEvent() Returns the current record's "ArtistEvent" collection
 * @method Artist              setPhoto()       Sets the current record's "Photo" collection
 * @method Artist              setMix()         Sets the current record's "Mix" collection
 * @method Artist              setTrack()       Sets the current record's "Track" collection
 * @method Artist              setArtistEvent() Sets the current record's "ArtistEvent" collection
 * 
 * @package    poomtshak
 * @subpackage model
 * @author     PoUpA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArtist extends ContentObject
{
    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Photo', array(
             'local' => 'id',
             'foreign' => 'Artist_Id'));

        $this->hasMany('Mix', array(
             'local' => 'id',
             'foreign' => 'Artist_Id'));

        $this->hasMany('Track', array(
             'local' => 'id',
             'foreign' => 'Artist_Id'));

        $this->hasMany('ArtistEvent', array(
             'local' => 'id',
             'foreign' => 'Artist_Id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}