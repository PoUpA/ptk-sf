<?php

/**
 * BaseSubscription
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $Date
 * @property float $Ammount
 * @property integer $User_id
 * @property PtkUser $PtkUser
 * 
 * @method integer      getId()      Returns the current record's "id" value
 * @method date         getDate()    Returns the current record's "Date" value
 * @method float        getAmmount() Returns the current record's "Ammount" value
 * @method integer      getUserId()  Returns the current record's "User_id" value
 * @method PtkUser      getPtkUser() Returns the current record's "PtkUser" value
 * @method Subscription setId()      Sets the current record's "id" value
 * @method Subscription setDate()    Sets the current record's "Date" value
 * @method Subscription setAmmount() Sets the current record's "Ammount" value
 * @method Subscription setUserId()  Sets the current record's "User_id" value
 * @method Subscription setPtkUser() Sets the current record's "PtkUser" value
 * 
 * @package    poomtshak
 * @subpackage model
 * @author     PoUpA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubscription extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('subscription');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'unique' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('Date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('Ammount', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('User_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PtkUser', array(
             'local' => 'User_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}