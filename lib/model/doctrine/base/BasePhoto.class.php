<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property Artist $Artist
 * @property Doctrine_Collection $Comment
 * @property Doctrine_Collection $AlbumPhoto
 * @property Doctrine_Collection $Event
 * 
 * @method Artist              getArtist()     Returns the current record's "Artist" value
 * @method Doctrine_Collection getComment()    Returns the current record's "Comment" collection
 * @method Doctrine_Collection getAlbumPhoto() Returns the current record's "AlbumPhoto" collection
 * @method Doctrine_Collection getEvent()      Returns the current record's "Event" collection
 * @method Photo               setArtist()     Sets the current record's "Artist" value
 * @method Photo               setComment()    Sets the current record's "Comment" collection
 * @method Photo               setAlbumPhoto() Sets the current record's "AlbumPhoto" collection
 * @method Photo               setEvent()      Sets the current record's "Event" collection
 * 
 * @package    poomtshak
 * @subpackage model
 * @author     PoUpA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends ContentObject
{
    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Artist', array(
             'local' => 'Artist_Id',
             'foreign' => 'id'));

        $this->hasMany('Comment', array(
             'local' => 'id',
             'foreign' => 'Photo_Id'));

        $this->hasMany('AlbumPhoto', array(
             'local' => 'id',
             'foreign' => 'Photo_Id'));

        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'Photo_Id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}